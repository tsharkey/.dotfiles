
ensurebrew() {
    echo "Checking if brew is installed..."

    if ! [ -x "$(command -v brew)" ]; then
    echo "brew not installed... would you like to install it now? (y/n)"
    read -r response
    if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo "installing brew..."
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        echo "brew not installed"
        exit 1
    fi
    else
        echo "brew already installed... updating"
        brew update
    fi
}

# todo this needs to be fixed
ensuremacosversion() {
    currentVersion=$(sw_vers -productVersion)

    echo "Checking os version..."

    # ensure macos 11.4 or greater
    if [[ $currentVersion < $REQUIRED_OS_VERSION ]]; then
        echo "macOS version $REQUIRED_OS_VERSION or greater is required. Would you like to update now? (y/n)"
        read -r response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            echo "Updating macOS to latest version..."
            softwareupdate -i -a
        fi
    else
        echo "macOS version $REQUIRED_OS_VERSION or greater is required"
        exit 1
    fi

    echo "macOS version $currentVersion >= required version $REQUIRED_OS_VERSION"
}

ensureomz() {
    echo "Checking for oh-my-zsh..."

    # check if oh my zsh is installed
    if ! [ -d ~/.oh-my-zsh ]; then
    echo "oh my zsh not installed... would you like to install it now? (y/n)"
    read -r response
    if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo "installing oh my zsh..."
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    else
        echo "oh my zsh not installed"
        exit 1
    fi
    else
        echo "oh my zsh already installed... updating"
        if ! pushd ~/.oh-my-zsh &> /dev/null && git pull && popd &> /dev/null; then
            echo "oh my zsh update failed, this is okay but should be updated when possible"
            exit 0
        fi
    fi
}

areyousure() {
    echo "Are you sure $1? (y/n)"
    read -r response
    if ! [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo "Exiting..."
        exit 1
    fi
}

ensuresymlink() {
    if [ -L "$1" ]; then
        echo "Symlink already exists: $1"
    else
        ln -s "$2" "$1"
    fi
}
